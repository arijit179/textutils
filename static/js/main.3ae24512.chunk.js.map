{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","style","color","title","type","id","onClick","toogleBlue","htmlFor","TextForm","useState","text","setText","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","about","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3ae24512.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/\" style = {{color : props.mode === 'blue'?'white':'black'}}>{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\" style = {{color : props.mode === 'blue'?'white':'black'}}>Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/about\" style = {{color : props.mode === 'blue'?'white':'black'}}>{props.about}</a>\r\n                        </li> */}\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    \r\n                    <div className={`form-check form-switch text-${props.mode === 'light'?'blue':'light'} mx-2`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick = {props.toogleBlue} />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"><b>Blue Mode</b></label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    about: PropTypes.string\r\n}\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    about: 'About'\r\n}","import React, { useState } from \"react\";\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState('');\r\n    \r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\" , \"success\");\r\n    }\r\n    const handleLoClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase\" , \"success\");\r\n    }\r\n    const handleClearClick = () => {\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text cleared\" , \"success\");\r\n    }\r\n    const handleCopy = () => {\r\n        var text = document.getElementById('myBox');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text copied to clipboard\" , \"success\");\r\n    }\r\n    const handleExtraSpaces = () => {\r\n        var newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed\" , \"success\");\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\" style = {{color : props.mode === 'blue'?'white':'black'}}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style = {{backgroundColor : props.mode === 'blue'?'#434040':'white' , color : props.mode === 'blue'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={handleUpClick}>\r\n                    Convert to Uppercase\r\n                </button>\r\n                <button type=\"submit\" className=\"btn btn-primary mx-3\" onClick={handleLoClick}>\r\n                    Convert to Lowercase\r\n                </button>\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={handleClearClick}>\r\n                    Clear Text\r\n                </button>\r\n                <button type=\"submit\" className=\"btn btn-primary mx-3\" onClick={handleCopy}>\r\n                    Copy Text\r\n                </button>\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={handleExtraSpaces}>\r\n                    Remove extra spaces\r\n                </button>\r\n            </div>\r\n            <div className=\"container\" style = {{color : props.mode === 'blue'?'white':'black'}}>\r\n                <h2 className = \"my-3\">Your text summary</h2>\r\n                <p className = \"my-3\">{text.split(' ').length} words and {text.length} characters</p>\r\n                <p className = \"my-3\">{0.008 *text.split(' ').length} Minutes to read</p>\r\n                <h3 className = \"my-3\">Preview</h3>\r\n                <p className = \"my-3\">{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport React, { useState } from 'react'\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n  const toogleBlue = () => {\n    if (mode === 'light') {\n      setMode('blue');\n      document.body.style.backgroundColor = '#021633';\n      showAlert(\"Blue mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n      // setInterval(() => {\n      //   document.title = \"TextUtils is amazing Mode\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install TextUtils now\";\n      // }, 1500);\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} toogleBlue={toogleBlue} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\" >\n          {/* <Switch> */}\n            {/* <Route exact path=\"/about\"> */}\n              {/* <About mode = {mode} toogleBlue = {toogleBlue}/> */}\n            {/* </Route> */}\n            {/* <Route exact path=\"/\"> */}\n              <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n            {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n// {/* <div className = \"container\">\n//     <About/>\n//     </div> */}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}